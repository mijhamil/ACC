{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e846be5b4a7abc7e0348.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../components/MyLayout.js'\r\nimport ApiCall from '../components/ApiCall'\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport {geolocated} from 'react-geolocated';\r\nimport {geoPropTypes} from 'react-geolocated';\r\nimport Data from '../components/Data.js'\r\n\r\n\r\nfunction getPosts () {\r\n  return [\r\n    { id: 'hello-nextjs', title: 'Hello Next.js'},\r\n    { id: 'learn-nextjs', title: 'Learn Next.js is awesome'},\r\n    { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT'},\r\n  ]\r\n}\r\n\r\n\r\n  const Index = (props) => (\r\n   \r\n    <div>\r\n     <h1>Batman TV Shows</h1>\r\n     <ul>\r\n       <h1>{console.log(props)}</h1>\r\n       \r\n     </ul>\r\n     </div>\r\n \r\n     \r\n   )\r\n\r\n  /* {props.shows.map(({show}) => (\r\n    <li key={show.id}>\r\n      <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\r\n        <a>{show.name}</a>\r\n      </Link>\r\n    </li>\r\n  ))} */\r\n   \r\nIndex.getInitialProps = async function() {\r\n    //const res = await fetch('https://api.darksky.net/forecast/***REMOVED***/37.334789,-121.888138')\r\n    const latty =  \"37.334789\"\r\n    const longgy =  \"-121.888138\"\r\n    const res = await fetch('https://api.darksky.net/forecast/***REMOVED***'+latty+','+longgy)\r\n  //  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\r\n    const data = await res.json()\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`)\r\n  \r\n    return {\r\n      shows: data\r\n    }\r\n  }\r\n\r\n/* if (\"geolocation\" in navigator) {\r\n  // check if geolocation is supported/enabled on current browser\r\n  navigator.geolocation.getCurrentPosition(\r\n   function success(position) {\r\n     // for when getting location is a success\r\n     console.log('latitude', position.coords.latitude, \r\n                 'longitude', position.coords.longitude);\r\n   },\r\n  function error(error_message) {\r\n    // for when getting location results in an error\r\n    console.error('An error has occured while retrieving location', error_message)\r\n  }  \r\n  );\r\n} else {\r\n  // geolocation is not supported\r\n  // get your location some other way\r\n  console.log('geolocation is not enabled on this browser')\r\n} */\r\n\r\n/*\r\nconst PostLink = ({ post }) => (\r\n  <li>\r\n    <Link as={`/p/${post.id}`} href={`/post?title=${post.title}`}>\r\n      <a>{post.title}</a>\r\n    </Link>\r\n  </li>\r\n)\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <h1>My Blog</h1>\r\n    <ul>\r\n      {getPosts().map((post) => (<PostLink key={post.id} post={post}/>))}\r\n    </ul>\r\n  </Layout>\r\n)\r\n*/\r\n\r\n\r\n// class Demo extends React.Component {\r\n  \r\n//   render() {\r\n//     return (\r\n\r\n     \r\n//     !this.props.isGeolocationAvailable\r\n//       ? <div>Your browser does not support Geolocation</div>\r\n//       : !this.props.isGeolocationEnabled\r\n//         ? <div>Geolocation is not enabled</div>\r\n//         : this.props.coords\r\n//           ? \r\n//           <table>\r\n//             <tbody>\r\n//               <tr><td>latitude</td><td>{this.props.coords.latitude}</td></tr>\r\n//               <tr><td>longitude</td><td>{this.props.coords.longitude}</td></tr>\r\n//               <tr><td>altitude</td><td>{this.props.coords.altitude}</td></tr>\r\n//               <tr><td>heading</td><td>{this.props.coords.heading}</td></tr>\r\n//               <tr><td>speed</td><td>{this.props.coords.speed}</td></tr>\r\n//             </tbody>\r\n//           </table>\r\n//           : <div>Getting the location data&hellip; </div>\r\n          \r\n//     );\r\n//   }\r\n// }\r\n\r\n// Demo.propTypes = Object.assign({}, Demo.propTypes, geoPropTypes);\r\n\r\n \r\n// export default geolocated()(Demo)\r\n// ;\r\n\r\n/*export default () => (\r\n  <div>\r\n    <Layout>\r\n    <p>Hello Next.js</p>\r\n    <Index />\r\n    </Layout>\r\n  </div>\r\n)*/\r\n export default Index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAaA;;;;;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAMA;AAEA;AARA;AAWA;AADA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;AAoBA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}