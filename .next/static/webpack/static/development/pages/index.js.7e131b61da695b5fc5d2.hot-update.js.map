{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.7e131b61da695b5fc5d2.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Header from '../components/Header.js'\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      dats: []\r\n    };\r\n    \r\n  }\r\n  getInitialProps = async function() {\r\n    const res = await fetch(\"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/01b26ee6d0c3282a322bd29fbe30564f/37.334789,-121.888138\", { headers: {\r\n         'Access-Control-Allow-Origin':'*'\r\n       }})\r\n    const data = await res.json()\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`)\r\n    console.log(res);\r\n  \r\n    return {\r\n      data\r\n    }\r\n  }\r\n\r\n  getApi() {\r\n    console.log(\"getApi Called\")\r\n    fetch(\"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/01b26ee6d0c3282a322bd29fbe30564f/37.334789,-121.888138\", { headers: {\r\n      'Access-Control-Allow-Origin':'*'\r\n    }})\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          dats: result\r\n        });\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n    //const datse = this.getInitialProps();\r\n    this.getApi();\r\n\r\n    // setTheState((datse) => {\r\n    //   this.setState({\r\n    //     dats: dats\r\n    //   })\r\n    // })\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (<div>\r\n        <h1>Loading...</h1>\r\n       \r\n      </div>);\r\n    } else {\r\n      return (\r\n        <h2>It is {JSON.stringify(this.state.dats, null, 2)}.</h2>\r\n      );\r\n    }\r\n    return (\r\n      \r\n      <div>\r\n        \r\n\r\n        <Header />\r\n        <h1>Hello, world!</h1>\r\n        <p>{JSON.stringify(this.state.dats, null, 2)}.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Clock;\r\n\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAIA;AAEA;AACA;AAPA;AAUA;AADA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAVA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAUA;AACA;;;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AAAA;AAUA;;;;AAtGA;AACA;AAuGA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}